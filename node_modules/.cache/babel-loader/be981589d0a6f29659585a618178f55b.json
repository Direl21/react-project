{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nlet initialState = {};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...state.users, ...action.users]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/maxtorsky/Desktop/first-react/my-app/src/redux/users-reducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","usersReducer","state","action","type","users","map","u","id","userId","followed","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,YAAY,GAAG,EAAnB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,MAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAkBC,CAAC,IAAI;AAC1B,cAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKT,QAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAkBC,CAAC,IAAI;AAC1B,cAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKR,SAAL;AAAgB;AACZ,eAAO,EAAC,GAAGG,KAAJ;AAAWG,UAAAA,KAAK,EAAE,CAAC,GAAGH,KAAK,CAACG,KAAV,EAAiB,GAAGF,MAAM,CAACE,KAA3B;AAAlB,SAAP;AACH;;AACD;AACI,aAAOH,KAAP;AAzBR;AA2BH,CA5BD;;AA8BA,OAAO,MAAMS,QAAQ,GAAIF,MAAD,KAAa;AAACL,EAAAA,IAAI,EAAEP,MAAP;AAAeY,EAAAA;AAAf,CAAb,CAAjB;AACP,OAAO,MAAMG,UAAU,GAAIH,MAAD,KAAa;AAACL,EAAAA,IAAI,EAAEN,QAAP;AAAiBW,EAAAA;AAAjB,CAAb,CAAnB;AACP,OAAO,MAAMI,UAAU,GAAIR,KAAD,KAAY;AAACD,EAAAA,IAAI,EAAEL,SAAP;AAAkBM,EAAAA;AAAlB,CAAZ,CAAnB;AAEP,eAAeJ,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\n\nlet initialState = {\n    \n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map ( u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map ( u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return {...state, users: [...state.users, ...action.users] }\n        }\n        default: \n            return state;\n    }\n}\n\nexport const followAC = (userId) => ({type: FOLLOW, userId})\nexport const unfollowAC = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsersAC = (users) => ({type: SET_USERS, users})\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}