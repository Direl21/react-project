{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 3\n      }, {\n        id: 2,\n        message: 'It\\'s my first post',\n        likesCount: 6\n      }, {\n        id: 3,\n        message: 'It\\'s my second post',\n        likesCount: 0\n      }, {\n        id: 4,\n        message: 'It\\'s my second post',\n        likesCount: 10\n      }, {\n        id: 5,\n        message: 'It\\'s my second post',\n        likesCount: 4\n      }],\n      newPostText: 'blablabla'\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Janna'\n      }, {\n        id: 2,\n        name: 'Sasha'\n      }, {\n        id: 3,\n        name: 'Kata'\n      }, {\n        id: 4,\n        name: 'Bard'\n      }, {\n        id: 5,\n        name: 'Lulu'\n      }],\n      messages: [{\n        id: 1,\n        message: 'Hello'\n      }, {\n        id: 2,\n        message: 'This day is butiful!'\n      }, {\n        id: 3,\n        message: 'How are you?'\n      }],\n      newMessageText: 'jjkjkjkj'\n    },\n    sitebar: {\n      onlineFriends: [{\n        id: 1,\n        name: 'Kata'\n      }, {\n        id: 2,\n        name: 'Bard'\n      }, {\n        id: 3,\n        name: 'Lulu'\n      }]\n    }\n  },\n\n  _callSubscriber() {\n    console.log('state change');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_MESSAGE) {\n      let newMes = {\n        id: 4,\n        message: this._state.dialogsPage.newMessageText\n      };\n\n      this._state.dialogsPage.messages.push(newMes);\n\n      this._state.dialogsPage.newMessageText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\n      this._state.dialogsPage.newMessageText = action.newDia;\n      console.log(action.newDia);\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const addMessageActionCreator = () => ({\n  type: ADD_MESSAGE\n});\nexport const updateNewMessageTextActionCreator = mes => ({\n  type: UPDATE_NEW_MESSAGE_TEXT,\n  newDia: mes\n});\nwindow.state = store;\nexport default store;","map":{"version":3,"sources":["/Users/maxtorsky/Desktop/first-react/my-app/src/redux/State.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageText","sitebar","onlineFriends","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newMes","push","newDia","addPostActionCreator","updateNewPostTextActionCreator","text","newText","addMessageActionCreator","updateNewMessageTextActionCreator","mes","window","state"],"mappings":"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","sourcesContent":["const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\n\nlet store = {\n    _state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: 'Hi, how are you?', likesCount: 3 },\n                { id: 2, message: 'It\\'s my first post', likesCount: 6 },\n                { id: 3, message: 'It\\'s my second post', likesCount: 0 },\n                { id: 4, message: 'It\\'s my second post', likesCount: 10 },\n                { id: 5, message: 'It\\'s my second post', likesCount: 4 }\n            ],\n            newPostText: 'blablabla'\n        },\n        dialogsPage: {\n            dialogs: [\n                { id: 1, name: 'Janna' },\n                { id: 2, name: 'Sasha' },\n                { id: 3, name: 'Kata' },\n                { id: 4, name: 'Bard' },\n                { id: 5, name: 'Lulu' }\n            ],\n            messages: [\n                { id: 1, message: 'Hello' },\n                { id: 2, message: 'This day is butiful!' },\n                { id: 3, message: 'How are you?' }\n            ],\n            newMessageText: 'jjkjkjkj'\n        },\n        sitebar: {\n            onlineFriends: [\n                { id: 1, name: 'Kata' },\n                { id: 2, name: 'Bard' },\n                { id: 3, name: 'Lulu' }\n            ]\n        }\n    },\n    _callSubscriber() {\n        console.log('state change');\n    },\n\n    getState() {\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n\n    dispatch(action) {\n        \n        if (action.type === ADD_MESSAGE) {\n            let newMes = {\n                id: 4, \n                message: this._state.dialogsPage.newMessageText,\n            };\n        \n            this._state.dialogsPage.messages.push(newMes);\n            this._state.dialogsPage.newMessageText = '';\n            this._callSubscriber(this._state); \n        } else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\n            this._state.dialogsPage.newMessageText = action.newDia;\n            console.log(action.newDia)\n            this._callSubscriber(this._state);\n        }\n    }\n}\n\nexport const addPostActionCreator = () => ({\n        type: ADD_POST\n    })\n\nexport const updateNewPostTextActionCreator = (text) => ({\n        type: UPDATE_NEW_POST_TEXT, newText: text\n    })\n\n\nexport const addMessageActionCreator = () => ({\n        type: ADD_MESSAGE\n    })\n\nexport const updateNewMessageTextActionCreator = (mes) => ({\n        type: UPDATE_NEW_MESSAGE_TEXT, newDia: mes\n    })\n\nwindow.state = store;\n\n\nexport default store;"]},"metadata":{},"sourceType":"module"}