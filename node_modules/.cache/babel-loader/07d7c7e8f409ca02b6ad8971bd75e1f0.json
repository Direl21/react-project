{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diana\\\\Desktop\\\\React\\\\react-project\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloder from '../common/Preloder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {\n        withCredentials: true\n      }).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {\n      withCredentials: true\n    }).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["C:/Users/Diana/Desktop/React/react-project/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","axios","Users","Preloder","UsersContainer","Component","onPageChanged","pageNumber","props","get","pageSize","withCredentials","then","response","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from '../../redux/users-reducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloder from '../common/Preloder';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n        axios\r\n            .get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {\r\n                withCredentials: true\r\n            })\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount)\r\n            })\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n        axios\r\n            .get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {\r\n                withCredentials: true\r\n            })\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloder/> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageAC(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}*/\r\n\r\nexport default connect(mapStateToProps,{follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching})(UsersContainer);"]},"metadata":{},"sourceType":"module"}